<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>rank - Tag - Milky板板の博客</title>
        <link>https://uioqps.github.io/tags/rank/</link>
        <description>rank - Tag - Milky板板の博客</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 22 Feb 2020 21:40:28 &#43;0000</lastBuildDate><atom:link href="https://uioqps.github.io/tags/rank/" rel="self" type="application/rss+xml" /><item>
    <title>【bioinfo】-Q&amp;A-63</title>
    <link>https://uioqps.github.io/bioinfo-q-a-63/</link>
    <pubDate>Sat, 22 Feb 2020 21:40:28 &#43;0000</pubDate>
    <author>Milky</author>
    <guid>https://uioqps.github.io/bioinfo-q-a-63/</guid>
    <description><![CDATA[Python计算Rank(秩) 在统计学中，有时候我们需要求一组数据的Rank，如非参检验、Spearman相关性等。Rank中文意思叫做顺序，更专业点的叫法是”秩”。这里介绍一下用Python求Rank。 先看一个简单的例子：
1 2 3 4 5 6 7 8 9  &gt;&gt;&gt; a = [1.0, 5.6, 3.5, 9.7, 7.8] &gt;&gt;&gt; # rank_a = [1, 3, 2, 5, 4] ... &gt;&gt;&gt; rank_a = sorted(range(len(a)), key = a.__getitem__) &gt;&gt;&gt; rank_a [0, 2, 1, 4, 3] &gt;&gt;&gt; rank_a = [i + 1 for i in rank_a] &gt;&gt;&gt; rank_a [1, 3, 2, 5, 4]   上面的例子中，列表a中的元素是没有重复的，直接排序即可。如果有重复元素怎么办呢？最简单的办法是使用SciPy提供的rankdata()函数。
1 2 3 4 5 6 7 8 9 10 11  &gt;&gt;&gt; from scipy.]]></description>
</item>
</channel>
</rss>
