<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Website - Category - Milky板板の博客</title>
        <link>https://example.com/categories/website/</link>
        <description>Website - Category - Milky板板の博客</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 18 Aug 2023 12:52:57 &#43;0800</lastBuildDate><atom:link href="https://example.com/categories/website/" rel="self" type="application/rss+xml" /><item>
    <title>JS对象和方法</title>
    <link>https://example.com/js%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%96%B9%E6%B3%95/</link>
    <pubDate>Fri, 18 Aug 2023 12:52:57 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/js%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[对象
document
方法
getElementById()
变量
var userInfo = document.getElementById(&ldquo;userInfo&rdquo;)
函数
function addrow(){}
事件绑定
td4.innerHTML = &ldquo;删除&rdquo;
a标签绑定了按钮事件
A example var row = document.createElement(&ldquo;tr&rdquo;);
var td1 = document.createElement(&ldquo;td&rdquo;);
row.appendChild(td1);
tr类型能增加td类型的子元素
 申明一个变量；通过一个找/新建id的方法
var userInfo = document.getElementById(&ldquo;userInfo&rdquo;);
var row = document.createElement(&ldquo;tr&rdquo;); 给变量赋值；通过获取id/变量名的值
td_unitprice.innerHTML= $(&ldquo;productunitprice&rdquo;).value; 把变量加入父级
row.appendChild(td_id);  表的结构 table有不同的tag：tbody；
tbody属于数组，类似于tr；
tr标签的对象有appendchild的方法增加td元素。
$(&ldquo;orderinfo&rdquo;).getElementsByTagName(&ldquo;tbody&rdquo;)[0].appendChild(row[a]);
绑定事件 1 2 3  myButton.onclick = function(){ $(&#34;orderinfo&#34;).getElementsByTagName(&#34;tbody&#34;)[0].removeChild(row); };   ]]></description>
</item>
<item>
    <title>JS的作用域和构造函数</title>
    <link>https://example.com/js%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</link>
    <pubDate>Fri, 11 Aug 2023 10:26:28 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/js%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</guid>
    <description><![CDATA[作用域 顶级作用域 &gt; test内部执行期间作用域 &gt; 返回的新函数对象执行期间的作用域(abcd)
1 2 3 4 5 6 7 8 9 10 11 12 13  var abc = 1234; // 顶级作用域 function test(){ // test内部执行期间作用域 var t1 = &#34;11111111111111&#34;; var abcd = &#34;hello world&#34;; return function (){ // 返回的新函数对象执行期间的作用域 console.log(abcd); console.log(t1); }; }   闭包 指定函数的作用域以及函数与其周围状态（变量、函数等）之间的关系。 闭包是指一个函数可以访问其声明时的词法作用域，即使在它被调用的时候，它的外部作用域已经不再存在。
Abstract  封装数据和行为： 通过闭包，可以创建私有变量和函数，只有内部函数能够访问，从而实现数据的封装和隐藏。 模块化编程： 闭包可以帮助创建独立的模块，避免全局命名冲突，同时允许公开只需要暴露的接口。 回调函数和事件处理程序： 在异步编程中，闭包可以用来保存状态和数据，确保在回调函数中访问正确的数据。 实现函数工厂： 通过闭包，可以动态生成具有不同初始值或行为的函数。   ]]></description>
</item>
<item>
    <title>JS的变量和变量提升</title>
    <link>https://example.com/js%E7%9A%84%E5%8F%98%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</link>
    <pubDate>Fri, 11 Aug 2023 10:24:17 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/js%E7%9A%84%E5%8F%98%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</guid>
    <description><![CDATA[JavaScript 简介   JavaScript是一种运行在浏览器中的解释型的编程语言。在Web世界里，只有JavaScript能跨平台、跨浏览器驱动网页，与用户交互。
  JavaScript代码放到&lt;head&gt;中
  1 2 3 4 5  &lt;head&gt; &lt;script&gt; alert(&#39;Hello, world&#39;); &lt;/script&gt; &lt;/head&gt;   JavaScript可以对DOM树进行增查删改的操作，对doument对象，方法进行操作。  1  .getElementbyId()   嵌入式JS  1  &lt;button onclick=&#34; JS code&#34;&gt;&lt;/button&gt;   完成事件绑定
变量  js里面变量声明规则，变量只能以_或者英文字母开头，后面可以包括数字英文下划线 javascript 里面对象描述是{开头}结尾的，然后是一堆一堆的key value值 key值如果不带引号就按变量声明规则规则处理，如果带引号，只要是合法字符串就可以  1 2 3 4 5 6 7 8 9 10 11 12  var a = { aaa: 1234, 12_34_555_1: &#34;qqqq&#34;, &#34;aaa-+bbb&#34;: &#34;qqqqq&#34;, bbb: &#34;wwwww&#34;, eee: function() { console.]]></description>
</item>
<item>
    <title>前端问题清单</title>
    <link>https://example.com/%E5%89%8D%E7%AB%AF%E9%97%AE%E9%A2%98%E6%B8%85%E5%8D%95/</link>
    <pubDate>Fri, 28 Jul 2023 10:39:49 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/%E5%89%8D%E7%AB%AF%E9%97%AE%E9%A2%98%E6%B8%85%E5%8D%95/</guid>
    <description><![CDATA[布局相关  margin-top:5px 上边距 a标签的文字居中？ a标签如果是内联元素，内联元素在一个块级元素内部怎么垂直居中：改变父元素行高line-height写成和父元素的高度一样，它内部的内联元素垂直方向上就剧中了。 z-index 在z轴上的层级，数大的排在数小的上面,页面上有很多绝对定位的窗口，都可能互相覆盖，谁在上面，谁在下面，就靠z-index排序.
z-index的排序是根据父级走。relative absolute fixed都可以用z-index，默认的static静态定位不能用z-index，static不涉及元素重叠。 &lt;ul&gt;和&lt;li&gt; 可以用来写目录&lt;ul&gt;相当于一个列表,&lt;li&gt;指定样式。  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  .submenu_container, .menu_wrapper { padding: 0px; margin: 0px; cursor: pointer; } .menu { float: left; position: relative; width: 20%; height: 64px; line-height: 64px; margin: 0px; padding: 0px; list-style: none; color: #eee; text-align: center; }   样式相关  https://icons.mydrivers.com/2020/www/icon_2020.png 这种图标怎么找到定位？ 怎么实现下拉菜单？ Abstract   js]]></description>
</item>
<item>
    <title>父元素塌陷问题</title>
    <link>https://example.com/%E7%88%B6%E5%85%83%E7%B4%A0%E5%A1%8C%E9%99%B7%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 27 Jul 2023 21:38:11 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/%E7%88%B6%E5%85%83%E7%B4%A0%E5%A1%8C%E9%99%B7%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[float导致的父元素高度塌陷 在文档流中，当父元素的高度设置为自适应的时候（height：auto），此时父元素的高度默认会被子元素撑开。但是当为我们子元素设置浮动（float）以后，子元素就会完全脱离文档流，导致子元素无法撑开父元素高度的情况出现。
流式布局 一种等比例缩放布局方式，在CSS代码中使用百分比来设置宽度，也称百分比自适应的布局。 可以保证当前屏幕分辨率发生改变的时候，页面中的元素大小也可以跟着改变，所以流式布局是移动端开发常用的一种布局。
浮动布局 元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。
一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。
浮动元素之后的元素将围绕它。
浮动元素之前的元素将不会受到影响。
如果图像是右浮动，下面的文本流将环绕在它左边：
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118  &lt;!]]></description>
</item>
<item>
    <title>一个俄罗斯方块的js代码</title>
    <link>https://example.com/%E4%B8%80%E4%B8%AA%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97%E7%9A%84js%E4%BB%A3%E7%A0%81/</link>
    <pubDate>Mon, 03 Jul 2023 21:50:51 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/%E4%B8%80%E4%B8%AA%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97%E7%9A%84js%E4%BB%A3%E7%A0%81/</guid>
    <description><![CDATA[定义initGame函数 初始化stack的二维数组 根据键盘判断左右移动方向 设置pause变量 调用游戏开始函数
定义endGame函数 timer
定义runGame函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  if (!currentBlock) { if (stack[3][9]) { endGame(); return; } currentBlock = [4, 10]; redraw(); return; } if (canMove(currentBlock)) { moveDown(currentBlock); } else { stack[currentBlock[0] - 1][currentBlock[1] - 1] = true; currentBlock = null; } checkClear(); redraw();   定义canMove函数 1 2 3 4 5 6 7 8 9 10 11 12  var can; var max; for (var i = 0; i &lt; stack[currentBlock[0] - 1].]]></description>
</item>
<item>
    <title>前端学习4</title>
    <link>https://example.com/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A04/</link>
    <pubDate>Sat, 01 Jul 2023 11:54:03 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A04/</guid>
    <description><![CDATA[浮动布局
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  .aaa { width: 400px; height: 100px; border: 1px solid red; font-size: 32px; text-align: center; line-height: 100px; } // 行高100px 字体居中 .b1 { width: 20px; height: 20px; background: red; display: inline-block; } .www2 .ooo { vertical-align: bottom; line-height: 1; float: left; height: 50px; background: red; border-radius: 10px; } //没有空格 .]]></description>
</item>
<item>
    <title>前端学习3</title>
    <link>https://example.com/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A03/</link>
    <pubDate>Sat, 01 Jul 2023 11:40:24 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A03/</guid>
    <description><![CDATA[1、流式布局  标准文档流，从上到下，从左到右 内联元素 块级元素的内联元素可定位 display：inline-block 行高  2、浮动布局 Relative和absolute两种定位方式
 1、 fixed 浮动固定 2、 absolute 绝对于父元素的定位（body） margin：auto margin-left：10px margin-right：10px 3、 relative 相对于自身定位 transform (-50%,-50%) 4、 清除浮动 float: left overflow：hidden 父元素的高度随着子元素的高度变化  3、定位布局  top left bottom  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  .mainContent { width: 800px; margin: 0 auto; } .]]></description>
</item>
<item>
    <title>前端学习2</title>
    <link>https://example.com/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A02/</link>
    <pubDate>Sat, 01 Jul 2023 09:59:10 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A02/</guid>
    <description><![CDATA[单选框
1 2 3 4 5 6  &lt;input id=&#34;t1&#34; type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;1&#34; /&gt;1 &lt;input id=&#34;t2&#34; type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;2&#34; /&gt;2 &lt;input id=&#34;t3&#34; type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;3&#34; checked /&gt;3 &lt;input id=&#34;t4&#34; type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;4&#34; /&gt;4 &lt;input id=&#34;t5&#34; type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;5&#34; /&gt;5 &lt;input id=&#34;t6&#34; type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;6&#34; /&gt;6   多选框
1 2 3 4 5 6 7  &lt;select name=&#34;country&#34; multiple&gt; &lt;option value=&#34;China&#34;&gt;China&lt;/option&gt; &lt;option value=&#34;UK&#34;&gt;UK&lt;/option&gt; &lt;option value=&#34;Japan&#34;&gt;Japan&lt;/option&gt; &lt;option value=&#34;USA&#34;&gt;USA&lt;/option&gt; &lt;/select&gt;   输入框]]></description>
</item>
<item>
    <title>前端学习1</title>
    <link>https://example.com/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A01/</link>
    <pubDate>Wed, 28 Jun 2023 01:15:46 &#43;0800</pubDate>
    <author>Milky</author>
    <guid>https://example.com/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A01/</guid>
    <description><![CDATA[前端学习 HTML标签（1） 块级元素  padding 占据空间有background margin 无背景色  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  &lt;a&gt;&lt;/a&gt; 属性： href 链接页面 target 打开空页面 &lt;img&gt;&lt;/img&gt; 属性： src 图片路径 width height alt 找不到时显示的文字 style=&#34;display: block; margin: 0px auto;&#34; 居中图片 &lt;div&gt;&lt;/div&gt; 属性：块级元素 style=&#34;background: aquamarine;color: blue;width: 800px;margin: 50px auto 100px auto&#34; 背景色/字体颜色/定位（上右下左） &lt;span&gt;&lt;/span&gt; 属性：不能单独占据一行 &lt;br/&gt; 换行   表单 1 2 3 4  &lt;form&gt;&lt;/form&gt; 方法：默认get，会显示参数到网址 Name：&lt;input type=&#34;text&#34; name=&#34;attr1&#34;/&gt; 输入框 &lt;input type=&#34;submit&#34; name=&#34;Submit-btn&#34; value=&#34;submit&#34;/&gt; 按钮键value赋值   复习题目]]></description>
</item>
</channel>
</rss>
